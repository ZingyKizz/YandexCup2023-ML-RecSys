name: "12"

seed: 11
data_path: "/home/jupyter/mnt/s3/rnd-shared/projects/yandex_cup_2023/ML/RecSys/input_data/"
n_splits: 3

batch_size: 64
max_len: 32

model: model.net.TransNetwork9
model_params: {
    input_dim: 768,
    hidden_dim: 512,
}


criterion: training.criterion.FocalLoss
criterion_params: {
    gamma: 0.8,
    class_weights: [1.0, 1.0, 1.002, 1.003, 1.02, 1.001, 1.001, 1.014, 1.022, 1.005, 1.004, 1.003, 1.014, 1.016, 1.012, 1.012, 1.01, 1.02, 1.004, 1.023, 1.005, 1.007, 1.026, 1.002, 1.021, 1.015, 1.022, 1.025, 1.002, 1.01, 1.022, 1.019, 1.015, 1.004, 1.02, 1.002, 1.029, 1.005, 1.025, 1.013, 1.02, 1.017, 1.007, 1.003, 1.011, 1.016, 1.025, 1.017, 1.027, 1.007, 1.018, 1.029, 1.016, 1.01, 1.027, 1.018, 1.009, 1.021, 1.006, 1.026, 1.014, 1.016, 1.011, 1.008, 1.019, 1.021, 1.006, 1.025, 1.012, 1.029, 1.025, 1.011, 1.016, 1.006, 1.029, 1.022, 1.026, 1.014, 1.001, 1.006, 1.021, 1.016, 1.018, 1.024, 1.03, 1.028, 1.027, 1.021, 1.011, 1.008, 1.026, 1.017, 1.008, 1.012, 1.017, 1.03, 1.028, 1.018, 1.028, 1.026, 1.019, 1.026, 1.013, 1.023, 1.025, 1.017, 1.021, 1.023, 1.017, 1.008, 1.007, 1.003, 1.017, 1.006, 1.01, 1.028, 1.023, 1.027, 1.015, 1.011, 1.016, 1.013, 1.014, 1.026, 1.018, 1.014, 1.02, 1.014, 1.026, 1.028, 1.03, 1.029, 1.022, 1.015, 1.013, 1.024, 1.006, 1.02, 1.025, 1.005, 1.028, 1.026, 1.013, 1.01, 1.023, 1.009, 1.004, 1.009, 1.028, 1.028, 1.024, 1.022, 1.02, 1.009, 1.025, 1.027, 1.021, 1.027, 1.008, 1.029, 1.008, 1.024, 1.007, 1.02, 1.027, 1.006, 1.011, 1.03, 1.019, 1.012, 1.017, 1.001, 1.02, 1.002, 1.009, 1.019, 1.029, 1.022, 1.03, 1.019, 1.03, 1.023, 1.023, 1.027, 1.004, 1.017, 1.023, 1.025, 1.005, 1.015, 1.024, 1.029, 1.009, 1.007, 1.028, 1.022, 1.018, 1.013, 1.024, 1.001, 1.015, 1.027, 1.03, 1.019, 1.026, 1.015, 1.016, 1.014, 1.004, 1.03, 1.021, 1.029, 1.023, 1.024, 1.011, 1.005, 1.024, 1.021, 1.005, 1.028, 1.012, 1.012, 1.009, 1.003, 1.001, 1.021, 1.025, 1.027, 1.012, 1.01, 1.013, 1.014, 1.011, 1.01, 1.018, 1.002, 1.008, 1.027, 1.002, 1.029, 1.03, 1.023, 1.003, 1.029, 1.019, 1.007, 1.022, 1.026, 1.015, 1.018, 1.018, 1.019, 1.022, 1.024, 1.024, 1.028]
}

optimizer: training.optimizer.Adam
lr: 0.000015
lr_alpha: 30
optimizer_params: {}

scheduler: training.scheduler.Scheduler
scheduler_params: {
  num_training_steps: 10000,
  scheduler_name: "get_cosine_with_hard_restarts_schedule_with_warmup"
}

use_cv: true
cv_n_epochs: 30
cv_min_score_to_save_predictions: 0.23

use_solo: true
solo_n_epochs: 25
solo_save_last_n_epochs: 3

dataset: data.dataset.TaggingDataset
collator: data.dataset.RandomMomentCollator